services:
  backend:
    restart: always
    build: ./backend
    container_name: django_backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn backend.wsgi:application --bind 0.0.0.0:8000"       
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - 8000
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy


  db:
    image: postgres:13
    container_name: postgres_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./backend/db_backup:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  frontend:
    build:
      context: ./frontend
    container_name: nginx_frontend
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - ./frontend/.env
    depends_on:
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume: